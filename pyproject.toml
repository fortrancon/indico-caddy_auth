[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "indico-plugin-caddy-auth"
description = "Caddy forward_auth authentication endpoint for Indico"
readme = "README.md"
license = "MIT"
authors = [
    {email = "contact@fortrancon.org"},
]
classifiers = [
    "Environment :: Plugins",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

[project.entry-points."indico.plugins"]
caddy_auth = "indico_caddy_auth.plugin:CaddyAuthPlugin"

[tool.hatch.version]
path = "indico_caddy_auth/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["indico_caddy_auth"]

# Ruff configuration for code linting and formatting
# Based on Indico's coding standards

[tool.ruff]
target-version = "py312"
line-length = 120
extend-exclude = [
    "migrations",
    "__pycache__",
    ".git",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "N805",   # first argument should be named `self`
    "N806",   # variable in function should be lowercase
    "SIM105", # use contextlib.suppress
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["indico", "indico_caddy_auth"]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
